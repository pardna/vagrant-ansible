<?php
namespace App\Services\common\payments;
use App\Services\BaseService;

class GoCardlessService extends BaseService
{

    // Sandbox is the default - uncomment to change to production
    // GoCardless::$environment = 'production';

    protected $gc;

    public function __construct($db, $account_details, $environment)
    {
        // $account_details = array(
        //   'app_id'        => null,
        //   'app_secret'    => null,
        //   'merchant_id'   => null,
        //   'access_token'  => null
        // );
        // Initialize GoCardless
        $this->db = $db;
        $this->gc = new \GoCardless();
        $this->gc->set_account_details($account_details);
        //$this->gc->environment = $environment;
    }




    // To start the billing process the user is redirected to the GoCardless checkout page,
    // details of the payment are encoded in the request URL generated by this method.
    public function getSubscriptionUrl($subscription)
    {
      $payment_details =  (array) $subscription;
      $subsc_url = $this->gc->new_bill_url($payment_details);
      return $subsc_url;
    }

    public function createAOneOffPayment($bill){
      $payment_details =  (array) $bill;
      $bill_url = $this->gc->new_bill_url($payment_details);
      return $bill_url;
    }

    //Necessary - When the user has gone onto the payments page, we use this service to
    // confirm resource that the user has indeed successfuly completed payment
    public function confirmGoCardlessRessource($confirm_params){
      // Required confirm variables
      // $confirm_params = array(
      //   'resource_id'    => $_GET['resource_id'],
      //   'resource_type'  => $_GET['resource_type'],
      //   'resource_uri'   => $_GET['resource_uri'],
      //   'signature'      => $_GET['signature'],
      //   'state' => ''
      // );
      $confirmed_resource = $this->gc->confirm_resource($confirm_params);
      return $confirmed_resource;
    }





}
